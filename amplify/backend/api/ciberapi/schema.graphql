# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = {allow: public}
} # FOR TESTING ONLY!
type User @model {
  id: ID!
  username: String!
  email: String!
  ppURI: String
  #posts: [Post] @hasMany(index: "byUser", fields: ["id"])
  posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  #v1# posts: [Post] @connection(keyName: "byUser", fields: ["id"])
  #location: String!
  #bio: String
  skills: [String!]
  projects: [Project] @hasMany @connection(keyName: "byUser", fields: ["id"])
  socials: [String!]
}

type Post @model {
  #@key(name: "byUser", fields: ["userID"])
  #v1# @key(name:"byUser",fields:["userID"])
  id: ID!
  status: Boolean!
  videoURI: String!
  desc: String!
  #  userID: ID! @index(name: "byUser")
  #  user: User
  userID: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["userID"])
  #v1# userID: ID!
  #v1# user: User @connection(fields:["userID"])
  #likes: Int!
  #pings: [Ping]
  ########idk why#######comments: Int! @hasMany
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  #v1# comments: [Comment] @connection(keyName:"byPost",fields:["id"])
  #pings: [Ping] @hasMany
}

#v1# type Comment @model
#v1# @key(name:"byPost",fields:["postID","content"])
#
type Comment @model {
  id: ID!
  content: String!
  senderusername: String!
  postID: ID! @index(name: "byPost", sortKeyFields: ["content"])
  post: Post @belongsTo(fields: ["postID"])
  #v1#  postID: ID!
  #v1# post: Post @connection(fields:["postID"])
}

#type Project @model {
# id: ID!
# name: String!
# desc: String!
# links: String!
# tags: [Tag]
# projectID: ID!
#}

#type Ping @model {
#goes to postID's userID
#id: ID!
# pingerID: ID!
#postID: ID!
#pingMessage: String!
#}
